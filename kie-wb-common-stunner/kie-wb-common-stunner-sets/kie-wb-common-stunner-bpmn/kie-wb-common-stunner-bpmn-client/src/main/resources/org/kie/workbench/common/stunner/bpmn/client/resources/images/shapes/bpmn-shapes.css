/*
 * Copyright 2017 Red Hat, Inc. and/or its affiliates.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/*
    ******************
    BPMN shape styles.
    ******************
 */
 #gateway-background #background,
 #gateway-type #gateway,
 #gateway-subtypes #complex,
 #gateway-subtypes #event,
 #gateway-subtypes #exclusive,
 #gateway-subtypes #inclusive,
 #gateway-subtypes #parallel,
 #gateway-subtypes #parallel-event {
     opacity: 0;
     display: inline;
 }

#parallelMultipleGateway #background {
     opacity: 1;
     fill: #fef4ea;
}
#parallelMultipleGateway #gateway {
     opacity: 1;
     fill: #ec7a08;
}
#parallelMultipleGateway #parallel {
     opacity: 1;
     fill: #ec7a08;
}


#exclusiveGateway #background {
     opacity: 1;
     fill: #fef4ea;
     filter: none;
}

#exclusiveGateway #gateway {
     opacity: 1;
     fill: #ec7a08;
}
#exclusiveGateway #exclusive {
     opacity: 1;
     fill: #ec7a08;
}

#inclusiveGateway #background {
     opacity: 1;
     fill: #fef4ea;
}
#inclusiveGateway #gateway {
     opacity: 1;
     fill: #ec7a08;
}
#inclusiveGateway #inclusive {
     opacity: 1;
     fill: #ec7a08;
}

/*********************
.gateway {
    fill: #FDF4EA;
    stroke: #EC7A08;
    stroke-width: 16px;
}

.gateway_group_parallel_multiple {
    opacity: 0;
}

.gateway_parallelMultipleIcon {
    fill: #EC7A08;
    stroke: #EC7A08;
}

.gateway_exclusiveIcon {
    fill: #EC7A08;
    stroke: #EC7A08;
}

.gateway_inclusiveIcon {
    fill: #EC7A08;
    stroke: #EC7A08;
}

.gateway_group_exclusive {
    opacity: 0;
}

.gateway_group_inclusive {
    opacity: 0;
}

#parallelMultipleGateway .gateway_group_parallel_multiple {
    opacity: 1;
}

#exclusiveGateway .gateway_group_exclusive {
    opacity: 1;
}

#inclusiveGateway .gateway_group_inclusive {
    opacity: 1;
}
**********************/

.lane {
    fill: #f2f2f2;
    stroke: #000000;
    stroke-width: 0.5px;
}

.task {
    fill: white;
    stroke: black;
    stroke-width: 1.5px;
}

.task_group_user {
    opacity: 0;
}

.task_user_icon {
    stroke: #000000;
    fill: #000000;
}

.task_group_script {
    opacity: 0;
}

.task_script_icon {
    stroke: #000000;
    fill: #000000;
}

.task_group_business_rule {
    opacity: 0;
}

.task_business_rule_icon {
    stroke: #000000;
    fill: #000000;
}

#userTask .task_group_user {
    opacity: 1;
}

#scriptTask .task_group_script {
    opacity: 1;
}

#businessRuleTask .task_group_business_rule {
    opacity: 1;
}



#event-background #background,
#event-type #intermediate-noninterrupting,
#event-type #intermediate,
#event-type #end,
#event-type #end_1_,
#event-type #start,
#event-type #start-noninterrupting,
#event-subtypes #cancel-throwing,
#event-subtypes #cancel-catching,
#event-subtypes #compensation-throwing,
#event-subtypes #compensation-catching,
#event-subtypes #conditional-catching,
#event-subtypes #conditional-throwing,
#event-subtypes #end,
#event-subtypes #end_1_,
#event-subtypes #error-throwing,
#event-subtypes #error-catching,
#event-subtypes #escalation-throwing,
#event-subtypes #escalation-catching,
#event-subtypes #link-throwing,
#event-subtypes #link-catching,
#event-subtypes #message-throwing,
#event-subtypes #message-catching,
#event-subtypes #multiple-throwing,
#event-subtypes #multiple-catching,
#event-subtypes #parallel-multiple-throwing,
#event-subtypes #parallel-multiple-catching,
#event-subtypes #signal-throwing,
#event-subtypes #signal-catching,
#event-subtypes #wait   {
    opacity: 0;
}
#startNoneEvent #background {
    opacity: 1;
    fill: #e8fae6;
}
#startNoneEvent #start {
    opacity: 1;
    fill: #4aa241;
}

#startSignalEvent #background {
    opacity: 1;
    fill: #e8fae6;
}
#startSignalEvent #start {
    opacity: 1;
    fill: #4aa241;
}
#startSignalEvent #signal-catching {
    opacity: 1;
    fill: #4aa241;
}


#startMessageEvent #background {
    opacity: 1;
    fill: #e8fae6;
}
#startMessageEvent #start {
    opacity: 1;
    fill: #4aa241;
}
#startMessageEvent #message-catching {
    opacity: 1;
    fill: #4aa241;
}


#startTimerEvent #background {
    opacity: 1;
    fill: #e8fae6;
}
#startTimerEvent #start {
    opacity: 1;
    fill: #4aa241;
}
#startTimerEvent #wait {
    opacity: 1;
    fill: #4aa241;
}


#startErrorEvent #background {
    opacity: 1;
    fill: #e8fae6;
}
#startErrorEvent #start {
    opacity: 1;
    fill: #4aa241;
}
#startErrorEvent #error-catching {
    opacity: 1;
    fill: #4aa241;
}


#intermediateTimerEvent #background {
    opacity: 1;
    fill: #fbefcf;
}
#intermediateTimerEvent #intermediate {
    opacity: 1;
    fill: #e5a000;
}
#intermediateTimerEvent #wait {
    opacity: 1;
    fill: #e5a000;
}

#intermediateSignalCatchingEvent #background {
    opacity: 1;
    fill: #fbefcf;
}
#intermediateSignalCatchingEvent #intermediate {
    opacity: 1;
    fill: #e5a000;
}
#intermediateSignalCatchingEvent #signal-catching {
    opacity: 1;
    fill: #e5a000;
}

#intermediateMessageCatchingEvent #background {
    opacity: 1;
    fill: #fbefcf;
}
#intermediateMessageCatchingEvent #intermediate {
    opacity: 1;
    fill: #e5a000;
}
#intermediateMessageCatchingEvent #message-catching {
    opacity: 1;
    fill: #e5a000;
}

#intermediateErrorCatchingEvent #background {
    opacity: 1;
    fill: #fbefcf;
}
#intermediateErrorCatchingEvent #intermediate {
    opacity: 1;
    fill: #e5a000;
}
#intermediateErrorCatchingEvent #error-catching {
    opacity: 1;
    fill: #e5a000;
}

#intermediateSignalThrowingEvent #background {
    opacity: 1;
    fill: #bedee1;
}
#intermediateSignalThrowingEvent #intermediate {
    opacity: 1;
    fill: #007a87;
}
#intermediateSignalThrowingEvent #signal-throwing {
    opacity: 1;
    fill: #007a87;

}

#intermediateMessageThrowingEvent #background {
    opacity: 1;
    fill: #bedee1;
}
#intermediateMessageThrowingEvent #intermediate {
    opacity: 1;
    fill: #007a87;
}
#intermediateMessageThrowingEvent #message-throwing {
    opacity: 1;
    fill: #007a87;
}


#endNoneEvent #background {
    opacity: 0.5;
    fill: #fce7e7;
}
#endNoneEvent #end {
    opacity: 1;
    fill: #a30000;
}


#endSignalEvent #background {
    opacity: 0.5;
    fill: #fce7e7;
}
#endSignalEvent #end {
    opacity: 1;
    fill: #a30000;
}
#endSignalEvent #signal-catching {
    opacity: 1;
    fill: #a30000;
}


#endMessageEvent #background {
    opacity: 0.5;
    fill: #fce7e7;
}
#endMessageEvent #end {
    opacity: 1;
    fill: #a30000;
}
#endMessageEvent #message-catching {
    opacity: 1;
    fill: #a30000;
}


#endTerminateEvent #background {
    opacity: 0.5;
    fill: #fce7e7;
}
#endTerminateEvent #end {
    opacity: 1;
    fill: #a30000;
}
#endTerminateEvent #end_1_ {
    opacity: 1;
    fill: #a30000;
}

#endErrorEvent #background {
    opacity: 0.5;
    fill: #fce7e7;
}
#endErrorEvent #end {
    opacity: 1;
    fill: #a30000;
}
#endErrorEvent #error-throwing {
    opacity: 1;
    fill: #a30000;
}


/***************
.eventAll {
    stroke-width: 1.5px;
}

.eventAll_interm_circle {
    stroke-width: 1.5px;
    fill-opacity: 0;
    opacity: 0;
}

.eventAll_group_timer {
    opacity: 0;
}

.eventAll_timerIcon {

}

.eventAll_group_signal {
    opacity: 0;
}

.eventAll_group_message {
    opacity: 0;
}

.eventAll_signalIcon {

}

.eventAll_messageIcon {

}

.eventAll_group_terminate {
    opacity: 0;
}

.eventAll_group_message{
    opacity: 0;
}

.eventAll_terminateIcon {

}

.eventAll_group_error {
    opacity: 0;
}

.eventAll_errorIcon {

}

#startNoneEvent .eventAll {
    fill: #E8FAE6;
    stroke: #4AA241;
}

#startSignalEvent .eventAll {
    fill: #E8FAE6;
    stroke: #4AA241;
}

#startSignalEvent .eventAll_group_signal {
    opacity: 1;
}

#startSignalEvent .eventAll_signalIcon {
    fill: #4AA241;
    stroke: #4AA241;
}

#startMessageEvent .eventAll {
    fill: #E8FAE6;
    stroke: #4AA241;
}

#startMessageEvent .eventAll_group_message {
    opacity: 1;
}

#startMessageEvent .eventAll_messageIcon {
    fill: #4AA241;
    stroke: #4AA241;
}

#startMessageEvent .eventAll_interm_circle {
    stroke: #4AA241;
    opacity: 1;
}

#startTimerEvent .eventAll {
    fill: #E8FAE6;
    stroke: #4AA241;
}

#startTimerEvent .eventAll_timerIcon {
    fill: #4AA241;
    stroke: #4AA241;
}

#startTimerEvent .eventAll_group_timer {
    opacity: 1;
}

#startErrorEvent .eventAll {
    fill: #E8FAE6;
    stroke: #4AA241;
}

#startErrorEvent .eventAll_errorIcon {
    opacity: 1;
    fill: #4AA241;
    stroke: #4AA241;
}

#startErrorEvent .eventAll_errorIconFilled {
    opacity: 0;
}

#startErrorEvent .eventAll_group_error {
    opacity: 1;
}

#intermediateNoneEvent .eventAll {
    fill: #FBEFCF;
    stroke: #F0AB00;
}

#intermediateNoneEvent .eventAll_interm_circle {
    stroke: #F0AB00;
    opacity: 1;
}

#intermediateSignalCatchingEvent .eventAll {
    fill: #FBEFCF;
    stroke: #F0AB00;
}

#intermediateSignalCatchingEvent .eventAll_interm_circle {
    stroke: #F0AB00;
    opacity: 1;
}

#intermediateSignalCatchingEvent .eventAll_signalIcon {
    fill: #F0AB00;
    stroke: #F0AB00;
}

#intermediateSignalCatchingEvent .eventAll_group_signal {
    opacity: 1;
}

#intermediateMessageCatchingEvent .eventAll {
    fill: #FBEFCF;
    stroke: #F0AB00;
}

#intermediateMessageCatchingEvent .eventAll_interm_circle {
    stroke: #F0AB00;
    opacity: 1;
}

#intermediateMessageCatchingEvent .eventAll_messageIcon {
    fill: #F0AB00;
    stroke: #F0AB00;
}

#intermediateMessageCatchingEvent .eventAll_group_message {
    opacity: 1;
}

#intermediateErrorCatchingEvent .eventAll {
    fill: #FBEFCF;
    stroke: #F0AB00;
}

#intermediateErrorCatchingEvent .eventAll_interm_circle {
    stroke: #F0AB00;
    opacity: 1;
}

#intermediateErrorCatchingEvent .eventAll_errorIcon {
    fill: #F0AB00;
    stroke: #F0AB00;
    opacity: 1;
}

#intermediateErrorCatchingEvent .eventAll_errorIconFilled {
    opacity: 0;
}

#intermediateErrorCatchingEvent .eventAll_group_error {
    opacity: 1;
}

#intermediateSignalThrowingEvent .eventAll {
    fill: #8cabff;
    fill-opacity: 0.5;
    stroke: #008cec;
}

#intermediateSignalThrowingEvent .eventAll_interm_circle {
    stroke: #008cec;
    opacity: 1;
}

#intermediateSignalThrowingEvent .eventAll_signalIcon {
    fill: #008cec;
    stroke: #008cec;
}

#intermediateSignalThrowingEvent .eventAll_group_signal {
    opacity: 1;
}


#intermediateMessageThrowingEvent .eventAll {
    fill: #8cabff;
    fill-opacity: 0.5;
    stroke: #008cec;
}

#intermediateMessageThrowingEvent .eventAll_interm_circle {
    stroke: #008cec;
    opacity: 1;
}

#intermediateMessageThrowingEvent .eventAll_messageIcon {
    fill: #008cec;
    stroke: #008cec;
}

#intermediateMessageThrowingEvent .eventAll_group_message {
    opacity: 1;
}

#intermediateTimerEvent .eventAll {
    fill: #FBEFCF;
    stroke: #F0AB00;
}

#intermediateTimerEvent .eventAll_interm_circle {
    stroke: #F0AB00;
    opacity: 1;
}

#intermediateTimerEvent .eventAll_timerIcon {
    fill: #F0AB00;
    stroke: #F0AB00;
}

#intermediateTimerEvent .eventAll_group_timer {
    opacity: 1;
}

#intermediateMessageEvent .eventAll_interm_circle {
    stroke: #F0AB00;
    opacity: 1;
}

#intermediateMessageEvent .eventAll_timerIcon {
    fill: #F0AB00;
    stroke: #F0AB00;
}

#intermediateMessageEvent .eventAll_group_timer {
    opacity: 1;
}

#endNoneEvent .eventAll {
    fill: #FCE7E7;
    stroke: #A30000;
}

#endSignalEvent .eventAll {
    fill: #FCE7E7;
    stroke: #A30000;
}

#endSignalEvent .eventAll_signalIcon {
    fill: #A30000;
    stroke: #A30000;
}


#endMessageEvent .eventAll {
    fill: #FCE7E7;
    stroke: #A30000;
}

#endMessageEvent .eventAll_messageIcon {
    fill: #A30000;
    stroke: #A30000;
}

#endSignalEvent .eventAll_group_signal {
    opacity: 1;
}

#endMessageEvent .eventAll {
    fill: #FCE7E7;
    stroke: #A30000;
}

#endMessageEvent .eventAll_group_message {
    opacity: 1;
 }

#endMessageEvent .eventAll_messageIcon {
    fill: #A30000;
    stroke: #A30000;
}

#endTerminateEvent .eventAll {
    fill: #FCE7E7;
    stroke: #A30000;
}

#endTerminateEvent .eventAll_terminateIcon {
    fill: #A30000;
}

#endTerminateEvent .eventAll_group_terminate {
    opacity: 1;
}

#endErrorEvent .eventAll {
    fill: #FCE7E7;
    stroke: #A30000;
}

#endErrorEvent .eventAll_errorIcon {
    opacity: 0;
}

#endErrorEvent .eventAll_errorIconFilled {
    opacity: 1;
    fill: #A30000;
    stroke: #A30000;
}

#endErrorEvent .eventAll_group_error {
    opacity: 1;
}
*************************/


.subProcess {
    fill: #FFFFFF;
    stroke: #000000;
    stroke-width: 1.5px;
}

.subProcess_group_reusable {
    opacity: 0;
}

.subProcess_group_event {
    opacity: 0;
}

.subProcess_reusable_icon {
    stroke: #000000;
    fill: #000000;
}

.subProcess_reusable_boundingbox {
    fill:none;
    stroke: black;
    stroke-width: 10px;
}

.subProcess_event {
    stroke-dasharray: 5, 5;
    opacity: 1;
    fill: #f2f2f2;
    stroke: #000000;
}

.subProcess_event_icon {
    display: none;
}

.subProcess_reusable_icon {
    stroke: #000000;
    fill: #000000;
}

.subProcess_group_adHoc {
    opacity: 0;
}

.subProcess_adHoc_icon {
    stroke: #000000;
    fill: #000000;
}

#reusableSubProcess .subProcess {
    stroke-width: 3px;
}

#reusableSubProcess .subProcess_group_reusable {
    opacity: 1;
}

#adHocSubProcess .subProcess {
    fill: #f2f2f2;
}

#adHocSubProcess .subProcess_group_adHoc {
    opacity: 1;
}

#eventSubProcess .subProcess_group_event {
    opacity: 1;
}

#eventSubProcess .subProcess {
    fill: #f2f2f2;
}

#embeddedSubProcess .subProcess {
    fill: #f2f2f2;
}



/*
    *******************************
    Global BPMN text styles.
    *******************************
 */
#text {
    opacity: 1;
    font-family: Open Sans;
    font-size: 12px;
    fill: #000000;
    stroke: #393f44;
    stroke-width: 1px;
    text-align: left;
    align: left;
}

/*
    *******************************
    Global BPMN shape state styles.
    *******************************
 */
.shape-state-selected svg {
/* desired behavior is to apply the #selectGlow filter to the svg when the item is selected */
/* another way to do it is to apply the filter to a copy of the background path in the svg and show/hide that path */
    filter:url(#selectGlow);
}
.shape-state-highlight{
/* Desired behavior is to gray back everything else */
    stroke: blue;
}
.shape-state-invalid {
/* Desired behavior is to have a cursor change to ban (circle with line through) plus have the invalid items gray out */
    stroke: red;
}
